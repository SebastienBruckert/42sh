language: c
sudo: true
notifications:
  email: false
  slack: 42born2code:7VKgN0wy7keo3PVkYmKvkbJf
before_install:
    - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get update && wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip && unzip build-wrapper-linux-x86.zip && cp build-wrapper-linux-x86/libinterceptor-x86_64.so build-wrapper-linux-x86/libinterceptor-haswell.so;
      else brew update && wget https://sonarcloud.io/static/cpp/build-wrapper-macosx-x86.zip && unzip build-wrapper-macosx-x86.zip;
      fi;
after_script:
    - if [ $TRAVIS_OS_NAME = linux ]; then echo " --- Leaks --- " && cat Leaks.log | tail -n 20 | grep -A5 'LEAK SUMMARY' && echo " ---Leaks Full log $(cat Leaks.log | curl -F 'f:1=<-' ix.io)"; fi;
    - bash <(curl -s https://codecov.io/bash) -F unittests
    - sonar-scanner -X
git:
  depth: 3
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-8
    - gcc-7
    - gcc-4.8
    - valgrind
    - libncurses-dev
    # - clang-6.0
    # - clang-5.0
  sonarcloud:
    organization: "jjaniec-github"
    token:
      secure: "IQj7r15JgoKqED7ZkK8OKE8OIiIUu1DGAGWZt+LUt4Hxt3nLYHRtcAfAj5WjszUU23hjakOYNw+8NJTHhJE0P9bO75bOLcvFCBbWFvMJtB55M4vG7C3hYdE8HhHEqneHbmfG8Fhy4gJ3eA3Kfjb6cKobGgbEPnUHRZ8VJqvmswkubupwa2/qpi63GIjlioUvVCN8LF0riW8HbeaHsf5Ipv77Sdv0SqccPWMRE3hMYhx9lzALJtDmVhKVqI4Ylz3xOUmhqy+Ub4+AT1TaK+IUWr3j0WrtpER//ed02ybklbYxIH+yXloeuxnR8EcPVssTdWRMFyn5HJl6M8FeZbaadT4uKVdS1AUFfUFUu4rv/8taNSL0tQJe8/LBWBrFvpNlYXuoMCT4CMRLN/FPRrSlMQUzz7cSIcoKqnyBhe7mMaXBYzMdpasoqIin3XIfl46okMtsu31PQ7SbY1LqhPUQgh4poaHkMz/2raW+UQruPMGH/qZ8wkiV9D+6NfVr1bBnnX6R7I1xNubR79QV3eWy2o7knJv89jLFTLM0LoL9TiXB8ISj6no03zbYkaulJqSLf4G/bCDdNYylgoSNPyqaHa6ICZ9zUU8T5cShP9HqerQoelKRFWKhnpLUbSaRGdsx2AgZkDTNAX7yQq07nP5gic266Y2TppU6Oe6RC+o6Boo="
matrix:
    fast_finish: true
    include:
        - os: osx
          compiler: gcc
          osx_image: xcode9.4
          env: CXX=gcc
        - os: osx
          compiler: clang
          osx_image: xcode9.4
          env: CXX=clang
        - os: osx
          compiler: gcc
          osx_image: xcode9.2
          env: CXX=gcc
        - os: osx
          compiler: clang
          osx_image: xcode9.2
          env: CXX=clang
        - os: osx
          compiler: gcc
          osx_image: xcode8
          env: CXX=gcc
        - os: osx
          compiler: clang
          osx_image: xcode8
          env: CXX=clang
        - os: linux
          compiler: gcc-8
          env: CXX=gcc-8
        - os: linux
          compiler: gcc-7
          env: CXX=gcc-7
        - os: linux
          compiler: gcc-4.8
          env: CXX=gcc-4.8
        - os: linux
          compiler: clang
          env: CXX=clang
        # - os: linux
        #   compiler: clang-6.0
        #   env: CXX=clang-6.0
        # - os: linux
        #   compiler: clang-5.0
        #   env: CXX=clang-5.0
    allow_failures:
        - os: osx
          compiler: gcc
          osx_image: xcode9.4
          env: CXX=gcc
        - os: osx
          compiler: clang
          osx_image: xcode9.4
          env: CXX=clang
        - os: osx
          compiler: gcc
          osx_image: xcode8
          env: CXX=gcc
        - os: osx
          compiler: clang
          osx_image: xcode8
          env: CXX=clang
        - os: linux
          compiler: gcc-8
          env: CXX=gcc-8
        - os: linux
          compiler: gcc-7
          env: CXX=gcc-7
        - os: linux
          compiler: gcc-4.8
          env: CXX=gcc-4.8
        - os: linux
          compiler: clang
          env: CXX=clang
        # - os: linux
        #   compiler: clang-6.0
        #   env: CXX=clang-6.0
        # - os: linux
        #   compiler: clang-5.0
        #   env: CXX=clang-5.0
script: >
  if [ $TRAVIS_OS_NAME == linux ];
  then ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make CC=$CXX tests;
  else ./build-wrapper-macosx-x86/build-wrapper-macosx-x86 --out-dir bw-output make CC=$CXX tests;
  fi;
  if [ $TRAVIS_OS_NAME == osx ];
  then ./42sh_tests;
  else valgrind --leak-check=full ./42sh_tests 2> Leaks.log;
  fi;
  r=$?;
  make coverage;
  return $r;
